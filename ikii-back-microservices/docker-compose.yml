version: '3'
services:
  mongo:
    image: mongo:4.2.5
    volumes:
      - ./resources/mongo-entrypoint:/docker-entrypoint-initdb.d
      - db-mongo-data-local:/data/db
      - db-mongo-conf-local:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ikii@dm1ndB
      MONGO_INITDB_ROOT_PASSWORD: pass1Ki1Db
      MONGO_INITDB_DATABASE: ikiidb
      MONGO_INITDB_USERNAME: ik1iU53r<3
      MONGO_INITDB_PASSWORD: iki1P@5s<3
    ports:
      - "${MONGODB_PORT}:27017"
    networks:
      - ikiinet-local                  
##---- INFRASTRUCTURE MICROSERVICES---- ##
  ikii-back-config:
    container_name: ikii-back-config
    image : ikii/config:2.0.0
    restart: always
    tty: false
    ports:
        - "${SERVER_CONFIG_PORT}:8888"  
    networks:
        - ikiinet-local
    logging:
      options:
        max-size: "10m"
        max-file: "10"                     
      
  ikii-back-registry:
    container_name: ikii-back-registry
    image : ikii/registry:2.0.0
    restart: always
    tty: false
    ports:
        - "${SERVER_REGISTRY_PORT}:8761" 
    networks:
        - ikiinet-local
    links:
        - ikii-back-config:ikii-back-config     
    depends_on:
      - ikii-back-config                                   
    logging:
      options:
        max-size: "10m"
        max-file: "10"    
        
  ikii-back-gateway:
    container_name: ikii-back-gateway
    image : ikii/gateway:2.0.0
    restart: always    
    tty: false    
    ports:
      - "${GATEWAY_PORT}:4000"
    networks:
      - ikiinet-local  
    links:
      - ikii-back-config:ikii-back-config
    depends_on:
      - ikii-back-config
      - ikii-back-registry            

##----FUNCTIONAL MICROSERVICES----##
#  ikii-back-customers:
#    container_name: ikii-back-customers
#    image: alfonsotovar/customers:2.0.0
#    tty: false    
#    restart: always
#    ports:
#      - "8002:8002"   
#    networks:
#      - ikiinet-local 
#    links:
#      - ikii-back-config:ikii-back-config
#    depends_on:
#      - ikii-back-config
#      - ikii-back-registry
#      - mongo 

  ikii-back-business:
    container_name: ikii-back-business
    image : ikii/business:1.0.0
    tty: false    
    restart: always
    ports:
      - "8004:8004"  
    networks:
      - ikiinet-local 
    links:
      - ikii-back-config:ikii-back-config
    depends_on:
      - ikii-back-config
      - ikii-back-registry
      - mongo      

  ikii-back-security:
    container_name: ikii-back-security
    image : ikii/security:2.0.0
    tty: false    
    restart: always
    ports:
      - "8003:8003"  
    networks:
      - ikiinet-local 
    links:
      - ikii-back-config:ikii-back-config
    depends_on:
      - ikii-back-config
      - ikii-back-registry
      - mongo  
            
  ikii-back-products:
    container_name: ikii-back-products
    image : ikii/products:1.0.0
    tty: false    
    restart: always
    ports:
      - "8006:8006"  
    networks:
      - ikiinet-local 
    links:
      - ikii-back-config:ikii-back-config
    depends_on:
      - ikii-back-config
      - ikii-back-registry
      - mongo      

  ikii-back-payment-method:
    container_name: ikii-back-payment-method
    image : ikii/payment-method:1.0.0
    tty: false
    restart: always
    ports:
      - "8007:8006"  
    networks:
      - ikiinet-local 
    links:
      - ikii-back-config:ikii-back-config
    depends_on:
      - ikii-back-config
      - ikii-back-registry
      - mongo     
                 
networks:
  ikiinet-local:
    driver: bridge
    ipam:
      driver: default

volumes:
  db-mongo-data-local:
  db-mongo-conf-local:
